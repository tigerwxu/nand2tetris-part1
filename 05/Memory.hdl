// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    // DMux filters load request to correct chip only
    // Note address[14] is 0 for data addr and 1 for screen addr
    DMux(in=load, sel=address[14], a=load0, b=load1);

    // First 14 bits correspond to first 16384 addresses (data)
    // 0b000 0000 0000 0000 - 0b011 1111 1111 1111
    RAM16K(in=in, load=load0, address=address[0..13], out=dataOut);
    
    // Next, screen memory map takes another 8192 addresses
    // 0b100 0000 0000 0000 - 0b101 1111 1111 1111
    Screen(in=in, load=load1, address=address[0..12], out=screenOut);

    // Finally, keyboard takes a single address
    // 0b110 0000 0000 0000
    Keyboard(out=keyboardOut);

    // A Mux can select the correct output
    // Note address[13..14] is 00/01 for data, 10 for screen, 11 for keyboard
    Mux4Way16(a=dataOut, b=dataOut, c=screenOut, d=keyboardOut, sel=address[13..14], out=out);
}